datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @map("user_id") @db.ObjectId
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id") @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?    @unique
  emailVerified DateTime?  @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]
  Employee      Employee[]
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Employee {
  id              String       @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  age             Int
  phone           String
  email           String       @unique
  designation     String
  gender          Gender
  employeeType    EMPLOYEETYPE
  currentProjects Int
  location        String
  experience      Experience[]
  skills          Skill[]
  createdBy       User?        @relation(fields: [createdByEmail], references: [email], onDelete: Cascade)
  createdByEmail  String
}

enum Gender {
  MALE
  FEMALE
}

enum EMPLOYEETYPE {
  FULLTIME
  PARTTIME
  CONTRACT
  INTERN
}

model Experience {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  role       String
  years      Int
  employee   Employee @relation(fields: [employeeId], references: [id], onDelete: Cascade)
  employeeId String   @db.ObjectId
}

model Skill {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  level      Int
  employee   Employee @relation(fields: [employeeId], references: [id], onDelete: Cascade)
  employeeId String   @db.ObjectId
}
